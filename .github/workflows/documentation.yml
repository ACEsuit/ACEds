name: Documentation

on:
  push:
    branches:
      - Documentation # update to match your development branch (master, main, dev, trunk, ...)
    tags: '*'
  pull_request:

jobs:
  build:
    permissions:
      actions: write
      contents: write
      pull-requests: read
      statuses: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1'
      - uses: julia-actions/cache@v2
      - name: Install dependencies
        run: |
        using Pkg
        Pkg.pkg"update"
        Pkg.pkg"registry add https://github.com/JuliaMolSim/MolSim.git"
        Pkg.pkg"registry add https://github.com/ACEsuit/ACEregistry"
        Pkg.pkg"instantiate"
      shell: bash -c "julia --color=yes {0}"
        run: julia --project=docs/ -e 'using Pkg; Pkg.Registry.add(RegistrySpec(url="https://github.com/ACEsuit/ACEregistry")); Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
      - name: Build and deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # If authenticating with GitHub Actions token
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }} # If authenticating with SSH deploy key
        run: julia --project=docs/ docs/make.jl


test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    # Setup Python environment
    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'
        architecture: 'x64'
    - name: Install Python dependencies (required in Julia Pycall)
      run: |
          python3 -m pip install --upgrade pip
          pip install numpy
          pip install pandas
          pip install matplotlib
    # Setup Julia environment
    - name: Setup Julia environment
      uses: julia-actions/setup-julia@latest
      with:
        # The Julia version to download (if necessary) and use.
        version: 1.8
        # Display InteractiveUtils.versioninfo() after installing
        show-versioninfo: true # optional, default is false
    - run: |
        using InteractiveUtils; versioninfo()
        using Pkg
        Pkg.pkg"update"
        Pkg.pkg"registry add https://github.com/JuliaMolSim/MolSim.git"
        Pkg.pkg"registry add https://github.com/ACEsuit/ACEregistry"
        Pkg.activate(".")
        Pkg.test("ACEds")
      shell: bash -c "julia --color=yes {0}"
